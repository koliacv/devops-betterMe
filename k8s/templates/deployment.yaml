apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ .Values.project.name }}-deployment"
  namespace: "{{ .Values.project.name }}"
  labels:
    app: "{{ .Values.project.name }}"
spec:
  replicas: {{ .Values.pods.replicas | default 1 }}
  selector:
    matchLabels:
      app: "{{ .Values.project.name }}"
  template:
    metadata:
      labels:
        app: "{{ .Values.project.name }}"
    spec:
      serviceAccountName: "{{ .Values.project.name }}-service-account"
      containers:
      - name: "{{ .Values.project.name }}-container"
        image: "{{ .Values.container.image }}"
        ports:
        - containerPort: 3000
        env:
        - name: DATABASE_URL
          valueFrom:
            configMapKeyRef:
              name: "{{ .Values.project.name }}-config"
              key: database_url
        
        - name: PUBLIC_BUCKET_URL
          valueFrom:
            configMapKeyRef:
              name: "{{ .Values.project.name }}-config"
              key: public_bucket_url
        - name: PRIVATE_BUCKET_URL
          valueFrom:
            configMapKeyRef:
              name: "{{ .Values.project.name }}-config"
              key: private_bucket_url
        
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              name: "{{ .Values.project.name }}-aws-credentials"
              key: access_key_id
              optional: true
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: "{{ .Values.project.name }}-aws-credentials"
              key: secret_access_key
              optional: true
        
        - name: AWS_REGION
          valueFrom:
            configMapKeyRef:
              name: "{{ .Values.project.name }}-config"
              key: aws_region

